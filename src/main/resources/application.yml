# Spring Boot Application Configuration
spring:
  application:
    name: hellojava06
  profiles:
    active: default

  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password
    
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
        
  # Flyway Configuration
  flyway:
    baseline-on-migrate: true
    validate-on-migrate: true

---
# Test profile configuration
spring:
  config:
    activate:
      on-profile: test
    
# AWS S3 Configuration
aws:
  s3:
    bucket-name: ${S3_BUCKET_NAME:test-bucket}
    region: ${AWS_REGION:us-east-1}
    access-key: ${AWS_ACCESS_KEY:}
    secret-key: ${AWS_SECRET_KEY:}

---
# Preprod profile configuration
spring:
  config:
    activate:
      on-profile: preprod
  
  # Database Configuration for preprod (usually PostgreSQL)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/hellojava06_preprod}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:hellojava06}
    password: ${DATABASE_PASSWORD}
    
  h2:
    console:
      enabled: false # Disable H2 console in preprod
      
  jpa:
    hibernate:
      ddl-auto: validate # Use Flyway for schema management
    show-sql: false # Reduce logging in preprod
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

# AWS S3 Configuration for preprod
aws:
  s3:
    bucket-name: ${LocalBucketName:pm3547b}  # Uses Helm value or defaults to BOM bucket
    region: ${AWS_REGION:us-east-1}          # Should match your org's region
    use-iam-role: true                       # Use Kubernetes IRSA/IAM roles
    # No static credentials - rely on IAM roles in Kubernetes

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    com.lithespeed: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Preprod-specific logging
spring:
  config:
    activate:
      on-profile: preprod

logging:
  level:
    com.lithespeed: INFO                     # Less verbose for preprod
    org.springframework.web: WARN            # Reduce Spring web logging
    org.hibernate.SQL: WARN                  # Reduce database logging
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"  # Cleaner log format
